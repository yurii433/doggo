<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" width="100%" viewBox="0 0 1024 1024" enable-background="new 0 0 1024 1024" xml:space="preserve"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  // https://developer.chrome.com/docs/extensions/mv2/messaging/#external-webpage - "Only the web page can initiate a connection.", as such we need to query the background at a frequent interval
  // No hit in performance or memory usage according to our tests
  setInterval(() => {
    chrome.runtime.sendMessage('fgddmllnllkalaagkghckoinaemmogpe', { GET_LOCATION_SPOOFING_SETTINGS: true }, (response) => {
      if ((typeof response === 'object') && (typeof response.coords === 'object')) {
        hookedObj.genLat = response.coords.lat;
        hookedObj.genLon = response.coords.lon;
        hookedObj.fakeGeo = response.fakeIt;
      }
    });
  }, 500);
  //]]>
}
          )();</script>
<path fill="#000000" opacity="1.000000" stroke="none" d=" M451.915558,616.076050   C467.615906,629.218994 484.364807,640.221313 502.105042,649.785522   C501.970703,650.243042 501.836334,650.700623 501.701996,651.158142   C494.173309,651.158142 486.600891,651.684753 479.123840,651.063232   C452.651886,648.862915 426.826019,643.721924 402.139343,633.469910   C355.998627,614.308350 321.320129,582.930969 300.657959,537.199524   C292.721375,519.633545 292.769318,525.088684 304.598999,510.359741   C308.524261,505.472443 312.906067,500.951782 316.766693,495.753265   C307.122650,497.523041 298.765930,502.363281 289.694916,506.827942   C287.017365,498.170715 286.380646,489.794250 285.818878,481.424469   C285.181274,471.924652 286.183594,462.461151 286.655029,452.985046   C286.786041,450.351288 288.260834,448.688873 289.950134,447.071075   C297.649139,439.697784 305.375122,432.352661 313.085938,424.991669   C314.024261,424.095886 315.307800,423.499146 315.938721,421.114105   C307.622345,422.354279 299.995728,424.660095 292.151031,427.087524   C291.179443,423.757538 292.605560,420.986084 293.329559,418.227325   C298.066467,400.177704 306.213348,383.627411 316.017395,367.862274   C317.860352,364.898743 318.721069,361.987610 318.711517,358.507843   C318.635620,330.844849 317.727051,303.138977 318.940948,275.528351   C320.660400,236.418564 328.780060,198.668259 348.597321,164.214554   C349.427490,162.771271 350.311249,161.354233 351.245270,159.975952   C359.205078,148.230057 370.732849,146.584167 381.467468,155.860809   C391.709137,164.711426 400.504333,174.973511 409.319550,185.193619   C423.156982,201.236313 435.830811,218.170853 447.559906,235.802673   C449.509979,238.734192 451.468201,239.594391 454.949249,238.734604   C472.869995,234.308380 491.112610,233.572800 509.451263,234.714371   C518.075134,235.251205 526.719666,236.015289 535.076782,238.339767   C539.274048,239.507187 541.539429,238.328552 543.968994,234.680023   C561.928528,207.709869 582.320679,182.695679 605.396729,159.917435   C607.872131,157.473969 610.629395,155.242325 613.520142,153.307190   C622.163879,147.520874 631.488464,148.868698 637.940247,157.011505   C646.213379,167.453079 651.399719,179.572937 655.920654,191.961670   C664.813171,216.329651 670.151184,241.421616 671.425110,267.397461   C672.944336,298.376282 671.914978,329.355469 671.832703,360.334015   C671.825439,363.050903 672.680786,365.170258 673.909363,367.340515   C682.535217,382.577698 690.661560,398.049194 695.911926,414.844452   C696.638672,417.169312 697.862610,419.455902 697.187622,422.392761   C693.300110,422.699921 689.509705,420.307556 685.168396,421.728058   C688.390869,425.684296 692.734436,427.857147 696.499817,430.680786   C699.375183,432.837036 700.800476,435.414581 701.411194,438.938873   C702.916077,447.623718 704.289490,456.315491 704.829224,465.116211   C705.038330,468.526215 705.775635,472.048035 703.584900,475.735016   C696.639038,472.513153 689.866638,469.007568 682.113892,468.556793   C681.574768,470.839081 683.192871,471.832031 684.069275,473.130585   C689.007751,480.447479 693.957397,487.757172 698.963074,495.028137   C700.765808,497.646667 701.071472,500.196747 700.455322,503.442627   C693.635010,539.371460 676.591553,569.654114 650.000732,594.512329   C628.276367,614.821289 603.021301,629.289856 574.793213,638.748901   C556.221985,644.971924 537.169312,648.522888 517.768677,650.568542   C516.628113,650.688721 515.470337,651.113220 513.313904,649.437500   C522.146301,618.997742 538.979248,592.308044 557.243713,565.901794   C552.632324,564.221069 548.256287,562.786316 544.003235,561.050232   C514.096924,548.843018 486.262787,533.426514 465.000214,508.345032   C456.537872,498.362732 449.681885,487.336243 447.271179,474.122803   C447.003357,472.654816 446.762085,471.152740 446.773041,469.668427   C446.813019,464.251801 449.554962,460.370392 453.849121,459.454224   C458.416870,458.479706 462.703949,460.898682 464.941010,465.928009   C467.040833,470.648895 469.020813,475.414246 471.987579,479.692047   C484.416229,497.613281 504.324829,505.004333 526.368774,500.133240   C535.331604,498.152710 543.954834,495.084503 552.740906,492.546631   C561.607239,489.985596 570.191162,490.929749 578.729858,493.762634   C584.261169,495.597717 589.822815,497.369812 595.250061,499.480804   C599.757324,501.234009 603.603577,500.206787 607.557678,497.908081   C621.349426,489.890320 627.567078,477.046417 630.607544,462.147888   C631.138428,459.546722 631.370056,456.885834 631.791016,454.260681   C633.111572,446.024475 636.752869,444.261719 644.706909,448.630096   C645.876587,431.625702 642.199036,416.158936 633.894043,401.709808   C625.252319,386.674805 611.880615,378.575775 595.170288,375.962402   C594.882935,372.843292 596.532898,370.989594 597.465027,368.918457   C606.162964,349.592163 603.617676,329.442596 590.375122,315.938110   C580.471924,305.839050 568.331970,302.515808 554.678101,305.986481   C540.885925,309.492340 532.067627,318.447479 528.726685,332.294525   C524.028564,351.766235 531.634521,369.995575 549.128540,382.897491   C560.229126,391.084290 572.664917,396.674194 585.129578,402.274780   C588.010132,403.569122 590.836487,405.017792 593.571228,406.597382   C612.372498,417.457092 617.215149,437.602386 605.257812,455.837921   C597.691101,467.377502 587.375061,474.876984 573.344360,476.828644   C568.485535,477.504456 564.011963,476.385193 559.677368,474.803223   C544.176758,469.146118 529.370178,449.942657 530.594116,433.076538   C531.153992,425.360840 533.955994,418.929382 539.196289,413.430786   C543.674072,408.732239 543.641235,408.274536 537.807068,404.985626   C530.248657,400.724701 522.928528,396.157928 516.361084,390.406006   C504.246674,379.795990 498.177917,366.498260 497.800323,350.448120   C497.667450,344.802032 498.108643,339.136993 496.925873,333.512177   C493.882965,319.040955 483.279755,308.032806 469.675446,305.463867   C454.593811,302.615936 438.453888,309.011719 430.641541,321.067261   C420.226929,337.138550 420.042358,353.498505 429.478546,370.070648   C430.439026,371.757446 431.947723,373.243988 431.673737,375.762604   C427.798187,376.871704 423.858704,376.315857 419.960449,375.984497   C400.945862,374.368164 383.840302,378.991394 369.818909,392.268860   C358.320862,403.156830 351.611359,416.840820 349.419312,432.509216   C345.271118,462.160156 351.041718,490.115112 364.646973,516.570312   C368.980927,524.997620 373.647186,533.256287 380.076599,541.166992   C378.662445,518.448181 379.610138,496.561127 390.220612,475.783081   C389.966370,531.763855 408.202759,579.381836 451.915558,616.076050  M620.756042,208.205139   C613.609680,223.971878 606.534668,239.771652 599.261169,255.479507   C597.667053,258.922089 597.913269,261.078125 601.219055,263.412140   C614.047852,272.469818 625.680786,282.916687 636.202942,294.594452   C637.327698,295.842712 638.241760,297.619720 640.546082,297.648193   C642.204590,264.021698 637.346191,231.635178 626.394165,199.391617   C623.223938,202.015900 622.560791,205.037872 620.756042,208.205139  M354.671143,238.991760   C351.173584,258.176758 349.339752,277.449310 350.767181,297.145844   C353.637268,296.644775 354.609711,294.959229 355.826538,293.673157   C365.902679,283.023682 376.295837,272.664124 388.349976,264.286163   C393.127075,260.965973 393.466980,258.001221 391.201141,253.164490   C384.148132,238.109100 377.462341,222.882080 370.528259,207.770203   C369.313904,205.123718 368.275513,202.286026 365.587158,199.517776   C360.226288,212.320999 357.494019,225.221863 354.671143,238.991760  M568.102173,542.470093   C565.700012,543.468201 566.114990,545.496521 566.841736,547.103516   C569.749207,553.532349 572.851807,559.873657 575.944946,566.216797   C576.270630,566.884705 576.784912,567.684937 578.170288,567.471741   C584.885559,558.215515 589.660339,547.654480 594.497009,537.136536   C595.141357,535.735352 596.248718,534.106689 594.616028,532.561096   C592.782471,530.825439 591.219360,532.184692 589.713257,533.114502   C583.178711,537.148560 576.190796,540.131348 568.102173,542.470093  M543.674744,427.814728   C545.404663,429.061066 547.171265,428.751221 548.843689,427.783813   C561.393860,420.524567 574.866882,420.579163 588.626587,422.619751   C589.909851,422.810089 591.532166,423.737335 592.610596,421.981323   C579.274597,409.951630 557.038879,412.233337 544.648621,420.823944   C542.401917,422.381683 541.392151,424.632202 543.674744,427.814728  M539.174377,520.748169   C550.967834,523.991760 562.493469,523.595703 574.150757,518.581421   C563.719177,510.836273 554.600586,512.249695 539.174377,520.748169  z"/>
<path fill="#000000" opacity="1.000000" stroke="none" d=" M533.050842,791.887573   C538.977417,803.449768 549.190002,809.683716 560.047302,808.608643   C569.647278,807.658142 580.909851,799.045898 582.998901,790.816101   C578.235474,789.783752 573.438416,790.513672 568.691528,790.402100   C560.363464,790.206177 555.209717,785.628906 554.808044,777.884888   C554.440491,770.798889 559.984314,764.069702 567.542847,763.866455   C582.527039,763.463684 597.532959,763.554871 612.522766,763.831116   C618.279358,763.937195 622.174011,768.689026 622.125183,775.189575   C621.968689,796.010498 622.283875,816.870972 621.086548,837.639526   C619.283325,868.914917 592.612976,892.995483 561.178528,893.378906   C542.926270,893.601440 527.455872,886.663269 513.331848,875.963501   C507.958710,871.893005 505.869995,864.362671 507.844879,858.483215   C509.926788,852.285278 516.050842,848.112976 523.836182,847.775635   C530.072632,847.505371 535.537170,849.859131 540.745972,853.035400   C549.864075,858.595520 559.488464,860.739624 569.830078,856.859192   C577.874817,853.840576 584.146851,845.142822 584.215759,836.865234   C580.913940,837.348511 578.691956,839.834595 575.887878,841.083008   C554.811707,850.466248 528.198242,844.306152 511.610443,826.089905   C486.553986,798.573425 486.722107,758.075684 511.864258,730.829712   C527.648987,713.724121 556.592896,706.005310 578.261230,716.633301   C581.892578,718.414490 584.872620,717.540100 588.165833,715.874512   C602.075134,708.839539 616.150146,717.988831 615.543274,733.540344   C615.395691,737.320862 613.908508,740.519653 610.777771,742.419312   C602.669250,747.339233 594.623840,752.410522 585.892029,756.210205   C581.531555,758.107727 577.480774,757.604431 573.779968,754.457764   C565.602051,747.504456 556.354431,746.235107 546.728943,750.510376   C536.738464,754.947571 531.797119,763.482239 530.383911,774.008606   C529.580688,779.991028 529.953796,786.002563 533.050842,791.887573  z"/>
<path fill="#000000" opacity="1.000000" stroke="none" d=" M214.654053,785.999878   C214.551956,755.347412 214.459473,725.194824 214.338318,695.042480   C214.309555,687.882080 217.337555,684.721375 224.668762,684.702698   C239.496887,684.664978 254.327591,684.557739 269.153046,684.770569   C307.154938,685.316101 336.358307,710.837341 342.472382,748.311890   C345.798218,768.696777 345.020569,788.562195 335.148560,807.113770   C323.288422,829.401428 304.076477,841.384216 279.295288,844.206299   C261.386353,846.245850 243.345688,844.975586 225.369156,844.785522   C216.898270,844.695984 213.716705,840.994385 214.183594,832.966675   C215.084244,817.480713 214.406616,801.987305 214.654053,785.999878  M288.546295,726.935669   C279.247101,719.877258 268.408356,720.139832 257.514282,720.087341   C252.739655,720.064392 251.197784,721.521118 251.239532,726.350220   C251.436630,749.155701 251.291489,771.964050 251.283035,794.771423   C251.277451,809.802612 251.289658,809.872009 266.577698,809.637268   C281.634308,809.406250 293.668579,803.707458 301.237091,790.085449   C304.468475,784.269470 305.906616,777.915100 306.228485,771.439148   C307.081329,754.280884 303.623047,738.628174 288.546295,726.935669  z"/>
<path fill="#000000" opacity="1.000000" stroke="none" d=" M748.390442,823.349487   C720.924377,853.175476 676.450684,853.891907 649.885986,824.632874   C632.343018,805.310486 627.670044,782.374329 635.660767,757.667480   C643.440674,733.612366 660.295044,718.501038 685.167542,713.151794   C723.684570,704.868164 759.765137,730.908936 764.465759,769.744690   C766.911072,789.947449 761.658691,807.604614 748.390442,823.349487  M683.763306,804.786316   C696.283630,812.262939 711.325684,809.746643 720.647095,798.616089   C729.752563,787.743347 730.426941,772.275024 722.278381,761.198608   C713.930847,749.851562 700.357788,745.881042 687.775513,751.265015   C676.626892,756.035461 670.562744,764.924988 669.561157,776.662842   C668.570190,788.275818 673.592957,797.612244 683.763306,804.786316  z"/>
<path fill="#000000" opacity="1.000000" stroke="none" d=" M354.649536,756.874268   C370.440308,710.801086 427.209747,697.853699 460.522522,727.611694   C481.260834,746.136963 488.960419,769.731628 481.598907,796.686340   C474.337158,823.275940 456.056427,839.677002 429.049866,844.890381   C391.877930,852.066101 356.741699,825.777039 351.571747,788.205017   C350.103668,777.536011 351.372955,767.364502 354.649536,756.874268  M388.352966,776.844910   C386.789673,794.160706 401.499146,809.927612 418.153748,808.906433   C430.543488,808.146729 439.366699,802.321594 444.222778,791.142578   C449.328674,779.388550 447.335785,768.278809 438.966034,758.596375   C431.060181,749.450562 420.719940,747.136230 409.492645,750.216431   C396.674774,753.733032 390.377838,763.251038 388.352966,776.844910  z"/>
<path fill="#000000" opacity="1.000000" stroke="none" d=" M456.609741,335.064270   C466.592163,334.245911 473.985413,338.172302 477.608032,345.894196   C480.835754,352.774384 479.766113,360.589966 474.864655,365.939301   C469.427368,371.873566 460.163513,374.021881 452.852112,371.044067   C445.548462,368.069427 441.315399,360.883209 441.700378,352.112457   C442.058472,343.953888 447.134857,338.021301 456.609741,335.064270  z"/>
<path fill="#000000" opacity="1.000000" stroke="none" d=" M546.958008,356.478882   C546.285461,344.977692 551.761719,337.313324 561.842529,335.110413   C570.292053,333.264038 580.044739,338.623657 583.235962,346.867188   C587.212280,357.138824 582.116516,367.804108 571.580322,371.261932   C560.292725,374.966339 550.412842,369.182831 546.958008,356.478882  z"/>
<path fill="#000000" opacity="1.000000" stroke="none" d=" M738.164734,696.772827   C741.307068,689.251038 746.524719,685.474792 752.998291,685.745728   C759.519348,686.018677 765.146973,690.451050 766.856140,696.842651   C768.380493,702.543213 766.782715,707.554321 762.379333,711.263611   C757.784119,715.134583 752.413025,716.529968 746.564697,713.957458   C741.199829,711.597656 738.338257,707.375610 737.752502,701.626282   C737.603394,700.162842 737.924561,698.651428 738.164734,696.772827  z"/>
</svg>